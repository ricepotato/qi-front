{"version":3,"sources":["Components/Home.js","Components/MFTable.js","Components/MFControl.js","api.js","Components/Loader.js","Views/Mf/index.js","Components/Router.js","App.js","serviceWorker.js","index.js"],"names":["home","to","styeld","tr","MFTable","mfList","Table","map","item","idx","key","code","total_rank","target","href","rel","name","roe","roa","per","pbr","market_cap","Container","div","RadioLabel","label","newTerms","MfControl","year","market","termObj","setTermObj","history","useHistory","useState","terms","setTerms","onClickMarket","e","value","push","updateTerms","Navbar","bg","variant","expand","className","Brand","Collapse","id","Nav","NavDropdown","title","Item","Form","inline","FormControl","type","placeholder","checked","onClick","htmlFor","onSubmit","preventDefault","mc_min","onChange","mc_max","limit","Button","api","axios","create","baseURL","stock","get","params","Mf","location","match","setMfList","getMfList","a","res","data","console","log","useEffect","MFControl","length","Loader","path","exact","component","Home","App","Router","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.7760ec6a.chunk.js","sourcesContent":["import React from \"react\";\nimport { Link } from \"react-router-dom\";\n\nconst home = () => {\n  return (\n    <>\n      <h1>Home</h1>\n      <Link to=\"/mf/KOSDAQ/2019\">KOSDAQ/2019</Link>\n    </>\n  );\n};\n\nexport default home;\n","import React from \"react\";\nimport styeld from \"styled-components\";\n\nimport Table from \"react-bootstrap/Table\";\n\nconst TableRow = styeld.tr``;\n\nconst Thead = styeld.tr``;\n\nconst MFTable = ({ mfList }) => (\n  <Table>\n    <thead>\n      <tr>\n        <th>종합순위</th>\n        <th>종목명</th>\n        <th>ROE</th>\n        <th>ROA</th>\n        <th>PER</th>\n        <th>PBR</th>\n        <th>시가총액</th>\n        <th>현재 거래가</th>\n      </tr>\n    </thead>\n    <tbody>\n      {mfList.map((item, idx) => (\n        <tr key={item.code}>\n          <td>{item.total_rank}</td>\n          <td>\n            <a\n              target=\"_blank\"\n              href={`http://comp.fnguide.com/SVO2/asp/SVD_Main.asp?pGB=1&gicode=A${item.code}&cID=&MenuYn=Y&ReportGB=&NewMenuID=101&stkGb=701`}\n              rel=\"noopener noreferrer\"\n            >\n              {item.name}\n            </a>\n          </td>\n          <td>{item.roe}</td>\n          <td>{item.roa}</td>\n          <td>{item.per}</td>\n          <td>{item.pbr}</td>\n          <td>{item.market_cap}</td>\n          <td>-</td>\n        </tr>\n      ))}\n    </tbody>\n  </Table>\n);\n\nexport default MFTable;\n","import React, { useState } from \"react\";\nimport styeld from \"styled-components\";\nimport { Link } from \"react-router-dom\";\n\nimport Button from \"react-bootstrap/Button\";\nimport Navbar from \"react-bootstrap/Navbar\";\nimport Nav from \"react-bootstrap/Nav\";\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\nimport Form from \"react-bootstrap/Form\";\nimport FormControl from \"react-bootstrap/FormControl\";\nimport { useHistory } from \"react-router-dom\";\n\nconst Container = styeld.div`\n`;\n\nconst RadioLabel = styeld.label`\n  margin-right:10px;\n  color: #fff;\n`;\n\nlet newTerms = {};\n\nconst MfControl = ({ year, market, termObj, setTermObj }) => {\n  const history = useHistory();\n  const [terms, setTerms] = useState({\n    ...termObj,\n  });\n\n  const onClickMarket = (e) => {\n    const {\n      target: { value },\n    } = e;\n    history.push(`/mf/${value}/${year}/`);\n  };\n\n  const handleSubmit = (e) => {\n    e.preventDefault();\n    setTermObj(newTerms);\n  };\n\n  const updateTerms = (e) => {\n    const { target } = e;\n    newTerms = { ...terms };\n    newTerms[target.name] = target.value;\n    setTerms(newTerms);\n  };\n\n  return (\n    <Container>\n      <Navbar\n        bg=\"dark\"\n        variant=\"dark\"\n        expand=\"lg\"\n        className=\"bg-light justify-content-between\"\n      >\n        <Navbar.Brand>마법공식 종목추천</Navbar.Brand>\n        <Navbar.Collapse id=\"basic-navbar-nav\">\n          <Nav className=\"mr-auto\">\n            <NavDropdown title={year} id=\"basic-nav-dropdown\">\n              <NavDropdown.Item>\n                <Link to={`/mf/${market}/2019/`}>2019</Link>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                <Link to={`/mf/${market}/2018/`}>2018</Link>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                <Link to={`/mf/${market}/2017/`}>2017</Link>\n              </NavDropdown.Item>\n              <NavDropdown.Item>\n                <Link to={`/mf/${market}/2016/`}>2016</Link>\n              </NavDropdown.Item>\n            </NavDropdown>\n          </Nav>\n          <Form className=\"mr-auto\" inline>\n            <FormControl\n              type=\"radio\"\n              placeholder=\"Search\"\n              className=\"mr-sm-2\"\n              id=\"chk_market_kosdaq\"\n              name=\"market\"\n              value=\"KOSDAQ\"\n              checked={market === \"KOSDAQ\" ? true : false}\n              onClick={onClickMarket}\n            />\n            <RadioLabel htmlFor=\"chk_market_kosdaq\">KOSDAQ</RadioLabel>\n            <FormControl\n              type=\"radio\"\n              placeholder=\"Search\"\n              className=\"mr-sm-2\"\n              id=\"chk_market_kospi\"\n              name=\"market\"\n              value=\"KOSPI\"\n              checked={market === \"KOSPI\" ? true : false}\n              onClick={onClickMarket}\n            />\n            <RadioLabel htmlFor=\"chk_market_kospi\">KOSPI</RadioLabel>\n          </Form>\n\n          <Form inline onSubmit={handleSubmit}>\n            <FormControl\n              type=\"number\"\n              className=\"mr-sm-2\"\n              placeholder=\"최소 시가 총액\"\n              name=\"mc_min\"\n              value={terms.mc_min}\n              onChange={updateTerms}\n            />\n            <FormControl\n              type=\"number\"\n              className=\"mr-sm-2\"\n              placeholder=\"최대 시가 총액\"\n              name=\"mc_max\"\n              value={terms.mc_max}\n              onChange={updateTerms}\n            />\n            <FormControl\n              type=\"number\"\n              className=\"mr-sm-2\"\n              placeholder=\"출력 항목 수\"\n              name=\"limit\"\n              onChange={updateTerms}\n              value={terms.limit}\n            />\n            <Button type=\"submit\" variant=\"outline-success\">\n              Search\n            </Button>\n          </Form>\n        </Navbar.Collapse>\n      </Navbar>\n    </Container>\n  );\n};\n\nexport default MfControl;\n","import axios from \"axios\";\n\nconst api = axios.create({\n  baseURL: \"https://quant-invest-253108.df.r.appspot.com/\",\n  //baseURL: \"http://localhost:8080/\",\n});\n\nexport const stock = {\n  get: (year, market, mc_min = null, mc_max = null, limit = 20) => {\n    return api.get(`stock/${market}/${year}/`, {\n      params: { mc_min, mc_max, limit },\n    });\n  },\n};\n","import React from \"react\";\n\nexport default () => <h3>Loading...</h3>;\n","import React, { useEffect, useState } from \"react\";\nimport MFTable from \"../../Components/MFTable\";\nimport MFControl from \"../../Components/MFControl\";\nimport { stock } from \"../../api\";\nimport Loader from \"../../Components/Loader\";\n\nconst Mf = ({ location, match }) => {\n  const [mfList, setMfList] = useState([]);\n  const [terms, setTerms] = useState({\n    limit: 20,\n    mc_min: null,\n    mc_max: null,\n  });\n\n  const {\n    params: { year, market },\n  } = match;\n\n  const getMfList = async (year, market) => {\n    try {\n      const res = await stock.get(\n        year,\n        market,\n        terms.mc_min,\n        terms.mc_max,\n        terms.limit\n      );\n      const {\n        data: { data },\n      } = res;\n      setMfList(data);\n      console.log(data);\n    } catch (e) {\n      console.log(e);\n    }\n  };\n\n  useEffect(() => {\n    getMfList(year, market);\n  }, [market, year, terms]);\n\n  return (\n    <>\n      <MFControl\n        year={year}\n        market={market}\n        termObj={terms}\n        setTermObj={setTerms}\n      ></MFControl>\n\n      {mfList.length > 0 ? (\n        <MFTable mfList={mfList}></MFTable>\n      ) : (\n        <Loader></Loader>\n      )}\n    </>\n  );\n};\n\nexport default Mf;\n","import React from \"react\";\nimport { HashRouter as Router, Route } from \"react-router-dom\";\nimport Home from \"./Home\";\nimport Mf from \"../Views/Mf\";\nexport default () => (\n  <Router>\n    <>\n      <Route path=\"/\" exact component={Home} />\n      <Route path=\"/mf/:market/:year\" exact component={Mf}></Route>\n    </>\n  </Router>\n);\n","import React from \"react\";\nimport Router from \"./Components/Router\";\n\nfunction App() {\n  return (\n    <>\n      <Router></Router>\n    </>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.0/8 are considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl, {\n    headers: { 'Service-Worker': 'script' },\n  })\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready\n      .then(registration => {\n        registration.unregister();\n      })\n      .catch(error => {\n        console.error(error.message);\n      });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport \"./index.css\";\nimport App from \"./App\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nimport \"bootstrap/dist/css/bootstrap.min.css\";\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById(\"root\")\n);\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}