{"version":3,"sources":["Components/Home.js","Components/MFTable.js","Components/MFControl.js","api.js","Components/Loader.js","Views/Mf/index.js","Components/Router.js","App.js","serviceWorker.js","index.js"],"names":["Home","history","useHistory","useEffect","push","to","MFTable","styeld","tr","mfList","Table","map","item","idx","key","code","total_rank","target","href","rel","name","roe","roa","roa_rank","per","per_rank","pbr","market_cap","Container","div","RadioLabel","label","newTerms","MfControl","year","market","termObj","setTermObj","useState","terms","setTerms","onClickMarket","e","value","updateTerms","Navbar","bg","variant","expand","className","Brand","Collapse","id","Nav","NavDropdown","title","Item","Form","inline","FormControl","type","placeholder","checked","onClick","htmlFor","onSubmit","preventDefault","mc_min","onChange","mc_max","limit","Button","api","axios","create","baseURL","stock","get","params","Mf","location","match","setMfList","getMfList","a","res","data","console","log","MFControl","length","Loader","path","exact","component","App","Router","Boolean","window","hostname","ReactDOM","render","StrictMode","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister","catch","error","message"],"mappings":"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","file":"static/js/main.8c24643f.chunk.js","sourcesContent":["import React, { useEffect } from \"react\";\r\nimport { useHistory } from \"react-router-dom\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst Home = () => {\r\n  const history = useHistory();\r\n\r\n  const redirect = () => {\r\n    history.push(`/mf/KOSDAQ/2019/`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    redirect();\r\n  }, []);\r\n\r\n  return (\r\n    <>\r\n      <h1>Home</h1>\r\n      <Link to=\"/mf/KOSDAQ/2019\">KOSDAQ/2019</Link>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Home;\r\n","import React from \"react\";\r\nimport styeld from \"styled-components\";\r\n\r\nimport Table from \"react-bootstrap/Table\";\r\n\r\nconst TableRow = styeld.tr``;\r\n\r\nconst Thead = styeld.tr``;\r\n\r\nconst MFTable = ({ mfList }) => (\r\n  <Table>\r\n    <thead>\r\n      <tr>\r\n        <th>종합순위</th>\r\n        <th>종목명</th>\r\n        <th>ROE</th>\r\n        <th>ROA</th>\r\n        <th>PER</th>\r\n        <th>PBR</th>\r\n        <th>시가총액</th>\r\n        <th>현재 거래가</th>\r\n      </tr>\r\n    </thead>\r\n    <tbody>\r\n      {mfList.map((item, idx) => (\r\n        <tr key={item.code}>\r\n          <td>{item.total_rank}</td>\r\n          <td>\r\n            <a\r\n              target=\"_blank\"\r\n              href={`http://comp.fnguide.com/SVO2/asp/SVD_Main.asp?pGB=1&gicode=A${item.code}&cID=&MenuYn=Y&ReportGB=&NewMenuID=101&stkGb=701`}\r\n              rel=\"noopener noreferrer\"\r\n            >\r\n              {item.name}\r\n            </a>\r\n          </td>\r\n          <td>{item.roe}</td>\r\n          <td>\r\n            {item.roa}({item.roa_rank})\r\n          </td>\r\n          <td>\r\n            {item.per}({item.per_rank})\r\n          </td>\r\n          <td>{item.pbr}</td>\r\n          <td>{item.market_cap}</td>\r\n          <td>-</td>\r\n        </tr>\r\n      ))}\r\n    </tbody>\r\n  </Table>\r\n);\r\n\r\nexport default MFTable;\r\n","import React, { useState } from \"react\";\r\nimport styeld from \"styled-components\";\r\nimport { Link } from \"react-router-dom\";\r\n\r\nimport Button from \"react-bootstrap/Button\";\r\nimport Navbar from \"react-bootstrap/Navbar\";\r\nimport Nav from \"react-bootstrap/Nav\";\r\nimport NavDropdown from \"react-bootstrap/NavDropdown\";\r\nimport Form from \"react-bootstrap/Form\";\r\nimport FormControl from \"react-bootstrap/FormControl\";\r\nimport { useHistory } from \"react-router-dom\";\r\n\r\nconst Container = styeld.div`\r\n`;\r\n\r\nconst RadioLabel = styeld.label`\r\n  margin-right:10px;\r\n  color: #fff;\r\n`;\r\n\r\nlet newTerms = {};\r\n\r\nconst MfControl = ({ year, market, termObj, setTermObj }) => {\r\n  const history = useHistory();\r\n  const [terms, setTerms] = useState({\r\n    ...termObj,\r\n  });\r\n\r\n  const onClickMarket = (e) => {\r\n    const {\r\n      target: { value },\r\n    } = e;\r\n    history.push(`/mf/${value}/${year}/`);\r\n  };\r\n\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    setTermObj(newTerms);\r\n  };\r\n\r\n  const updateTerms = (e) => {\r\n    const { target } = e;\r\n    newTerms = { ...terms };\r\n    newTerms[target.name] = target.value;\r\n    setTerms(newTerms);\r\n  };\r\n\r\n  return (\r\n    <Container>\r\n      <Navbar\r\n        bg=\"dark\"\r\n        variant=\"dark\"\r\n        expand=\"lg\"\r\n        className=\"bg-light justify-content-between\"\r\n      >\r\n        <Navbar.Brand>마법공식 종목추천</Navbar.Brand>\r\n        <Navbar.Collapse id=\"basic-navbar-nav\">\r\n          <Nav className=\"mr-auto\">\r\n            <NavDropdown title={year} id=\"basic-nav-dropdown\">\r\n              <NavDropdown.Item>\r\n                <Link to={`/mf/${market}/2019/`}>2019</Link>\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item>\r\n                <Link to={`/mf/${market}/2018/`}>2018</Link>\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item>\r\n                <Link to={`/mf/${market}/2017/`}>2017</Link>\r\n              </NavDropdown.Item>\r\n              <NavDropdown.Item>\r\n                <Link to={`/mf/${market}/2016/`}>2016</Link>\r\n              </NavDropdown.Item>\r\n            </NavDropdown>\r\n          </Nav>\r\n          <Form className=\"mr-auto\" inline>\r\n            <FormControl\r\n              type=\"radio\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              id=\"chk_market_kosdaq\"\r\n              name=\"market\"\r\n              value=\"KOSDAQ\"\r\n              checked={market === \"KOSDAQ\" ? true : false}\r\n              onClick={onClickMarket}\r\n            />\r\n            <RadioLabel htmlFor=\"chk_market_kosdaq\">KOSDAQ</RadioLabel>\r\n            <FormControl\r\n              type=\"radio\"\r\n              placeholder=\"Search\"\r\n              className=\"mr-sm-2\"\r\n              id=\"chk_market_kospi\"\r\n              name=\"market\"\r\n              value=\"KOSPI\"\r\n              checked={market === \"KOSPI\" ? true : false}\r\n              onClick={onClickMarket}\r\n            />\r\n            <RadioLabel htmlFor=\"chk_market_kospi\">KOSPI</RadioLabel>\r\n          </Form>\r\n\r\n          <Form inline onSubmit={handleSubmit}>\r\n            <FormControl\r\n              type=\"number\"\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"최소 시가 총액\"\r\n              name=\"mc_min\"\r\n              value={terms.mc_min}\r\n              onChange={updateTerms}\r\n            />\r\n            <FormControl\r\n              type=\"number\"\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"최대 시가 총액\"\r\n              name=\"mc_max\"\r\n              value={terms.mc_max}\r\n              onChange={updateTerms}\r\n            />\r\n            <FormControl\r\n              type=\"number\"\r\n              className=\"mr-sm-2\"\r\n              placeholder=\"출력 항목 수\"\r\n              name=\"limit\"\r\n              onChange={updateTerms}\r\n              value={terms.limit}\r\n            />\r\n            <Button type=\"submit\" variant=\"outline-success\">\r\n              Search\r\n            </Button>\r\n          </Form>\r\n        </Navbar.Collapse>\r\n      </Navbar>\r\n    </Container>\r\n  );\r\n};\r\n\r\nexport default MfControl;\r\n","import axios from \"axios\";\r\n\r\nconst api = axios.create({\r\n  baseURL: \"https://white-sashimi.uc.r.appspot.com/\",\r\n});\r\n\r\nexport const stock = {\r\n  get: (year, market, mc_min = null, mc_max = null, limit = 20) => {\r\n    return api.get(`stocks/${market}/${year}/`, {\r\n      params: { mc_min, mc_max, limit },\r\n    });\r\n  },\r\n};\r\n","import React from \"react\";\r\n\r\nexport default () => <h3>Loading...</h3>;\r\n","import React, { useEffect, useState } from \"react\";\r\nimport MFTable from \"../../Components/MFTable\";\r\nimport MFControl from \"../../Components/MFControl\";\r\nimport { stock } from \"../../api\";\r\nimport Loader from \"../../Components/Loader\";\r\n\r\nconst Mf = ({ location, match }) => {\r\n  const [mfList, setMfList] = useState([]);\r\n  const [terms, setTerms] = useState({\r\n    limit: 20,\r\n    mc_min: null,\r\n    mc_max: null,\r\n  });\r\n\r\n  const {\r\n    params: { year, market },\r\n  } = match;\r\n\r\n  const getMfList = async (year, market) => {\r\n    setMfList([]);\r\n    try {\r\n      const res = await stock.get(\r\n        year,\r\n        market,\r\n        terms.mc_min,\r\n        terms.mc_max,\r\n        terms.limit\r\n      );\r\n      const {\r\n        data: { data },\r\n      } = res;\r\n      setMfList(data);\r\n      console.log(data);\r\n    } catch (e) {\r\n      console.log(e);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getMfList(year, market);\r\n  }, [market, year, terms]);\r\n\r\n  return (\r\n    <>\r\n      <MFControl\r\n        year={year}\r\n        market={market}\r\n        termObj={terms}\r\n        setTermObj={setTerms}\r\n      ></MFControl>\r\n\r\n      {mfList.length > 0 ? (\r\n        <MFTable mfList={mfList}></MFTable>\r\n      ) : (\r\n        <Loader></Loader>\r\n      )}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default Mf;\r\n","import React from \"react\";\r\nimport { HashRouter as Router, Route } from \"react-router-dom\";\r\nimport Home from \"./Home\";\r\nimport Mf from \"../Views/Mf\";\r\nexport default () => (\r\n  <Router>\r\n    <>\r\n      <Route path=\"/\" exact component={Home} />\r\n      <Route path=\"/mf/:market/:year\" exact component={Mf}></Route>\r\n    </>\r\n  </Router>\r\n);\r\n","import React from \"react\";\r\nimport Router from \"./Components/Router\";\r\n\r\nfunction App() {\r\n  return (\r\n    <>\r\n      <Router></Router>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default App;\r\n","// This optional code is used to register a service worker.\r\n// register() is not called by default.\r\n\r\n// This lets the app load faster on subsequent visits in production, and gives\r\n// it offline capabilities. However, it also means that developers (and users)\r\n// will only see deployed updates on subsequent visits to a page, after all the\r\n// existing tabs open on the page have been closed, since previously cached\r\n// resources are updated in the background.\r\n\r\n// To learn more about the benefits of this model and instructions on how to\r\n// opt-in, read https://bit.ly/CRA-PWA\r\n\r\nconst isLocalhost = Boolean(\r\n  window.location.hostname === 'localhost' ||\r\n    // [::1] is the IPv6 localhost address.\r\n    window.location.hostname === '[::1]' ||\r\n    // 127.0.0.0/8 are considered localhost for IPv4.\r\n    window.location.hostname.match(\r\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\r\n    )\r\n);\r\n\r\nexport function register(config) {\r\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\r\n    // The URL constructor is available in all browsers that support SW.\r\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\r\n    if (publicUrl.origin !== window.location.origin) {\r\n      // Our service worker won't work if PUBLIC_URL is on a different origin\r\n      // from what our page is served on. This might happen if a CDN is used to\r\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\r\n      return;\r\n    }\r\n\r\n    window.addEventListener('load', () => {\r\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\r\n\r\n      if (isLocalhost) {\r\n        // This is running on localhost. Let's check if a service worker still exists or not.\r\n        checkValidServiceWorker(swUrl, config);\r\n\r\n        // Add some additional logging to localhost, pointing developers to the\r\n        // service worker/PWA documentation.\r\n        navigator.serviceWorker.ready.then(() => {\r\n          console.log(\r\n            'This web app is being served cache-first by a service ' +\r\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\r\n          );\r\n        });\r\n      } else {\r\n        // Is not localhost. Just register service worker\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    });\r\n  }\r\n}\r\n\r\nfunction registerValidSW(swUrl, config) {\r\n  navigator.serviceWorker\r\n    .register(swUrl)\r\n    .then(registration => {\r\n      registration.onupdatefound = () => {\r\n        const installingWorker = registration.installing;\r\n        if (installingWorker == null) {\r\n          return;\r\n        }\r\n        installingWorker.onstatechange = () => {\r\n          if (installingWorker.state === 'installed') {\r\n            if (navigator.serviceWorker.controller) {\r\n              // At this point, the updated precached content has been fetched,\r\n              // but the previous service worker will still serve the older\r\n              // content until all client tabs are closed.\r\n              console.log(\r\n                'New content is available and will be used when all ' +\r\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\r\n              );\r\n\r\n              // Execute callback\r\n              if (config && config.onUpdate) {\r\n                config.onUpdate(registration);\r\n              }\r\n            } else {\r\n              // At this point, everything has been precached.\r\n              // It's the perfect time to display a\r\n              // \"Content is cached for offline use.\" message.\r\n              console.log('Content is cached for offline use.');\r\n\r\n              // Execute callback\r\n              if (config && config.onSuccess) {\r\n                config.onSuccess(registration);\r\n              }\r\n            }\r\n          }\r\n        };\r\n      };\r\n    })\r\n    .catch(error => {\r\n      console.error('Error during service worker registration:', error);\r\n    });\r\n}\r\n\r\nfunction checkValidServiceWorker(swUrl, config) {\r\n  // Check if the service worker can be found. If it can't reload the page.\r\n  fetch(swUrl, {\r\n    headers: { 'Service-Worker': 'script' },\r\n  })\r\n    .then(response => {\r\n      // Ensure service worker exists, and that we really are getting a JS file.\r\n      const contentType = response.headers.get('content-type');\r\n      if (\r\n        response.status === 404 ||\r\n        (contentType != null && contentType.indexOf('javascript') === -1)\r\n      ) {\r\n        // No service worker found. Probably a different app. Reload the page.\r\n        navigator.serviceWorker.ready.then(registration => {\r\n          registration.unregister().then(() => {\r\n            window.location.reload();\r\n          });\r\n        });\r\n      } else {\r\n        // Service worker found. Proceed as normal.\r\n        registerValidSW(swUrl, config);\r\n      }\r\n    })\r\n    .catch(() => {\r\n      console.log(\r\n        'No internet connection found. App is running in offline mode.'\r\n      );\r\n    });\r\n}\r\n\r\nexport function unregister() {\r\n  if ('serviceWorker' in navigator) {\r\n    navigator.serviceWorker.ready\r\n      .then(registration => {\r\n        registration.unregister();\r\n      })\r\n      .catch(error => {\r\n        console.error(error.message);\r\n      });\r\n  }\r\n}\r\n","import React from \"react\";\r\nimport ReactDOM from \"react-dom\";\r\nimport \"./index.css\";\r\nimport App from \"./App\";\r\nimport * as serviceWorker from \"./serviceWorker\";\r\n\r\nimport \"bootstrap/dist/css/bootstrap.min.css\";\r\n\r\nReactDOM.render(\r\n  <React.StrictMode>\r\n    <App />\r\n  </React.StrictMode>,\r\n  document.getElementById(\"root\")\r\n);\r\n\r\n// If you want your app to work offline and load faster, you can change\r\n// unregister() to register() below. Note this comes with some pitfalls.\r\n// Learn more about service workers: https://bit.ly/CRA-PWA\r\nserviceWorker.unregister();\r\n"],"sourceRoot":""}